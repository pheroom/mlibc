ZXC

	

ryuihn
yudcsbapvndfgyhuijkl;'rtyuiop[]ghjkl;'

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation
 License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections,
  with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is included in the section entitled
   “GNU Free Documentation License”.
   a
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is included in the section entitled “GNU Free Docu
mentation License”.


234567
int get_flags(int argc, char** argv, flag *flags, char** template) {
    int i = 1;
    while (argv[i][0] == '-' && argc > i + 1) {
        if (!strcmp(argv[i], "-e")) {
            if (flags -> e == 0) {  // && flags.f == 0) {
                (*template) = (char *) malloc(sizeof(char) * (strlen(argv[++i]) + 1));
                if (*template)
                    strcpy((*template), argv[i]);
            } else {
(*template) = (char *) s21_reallocf((*template),ghjkl;kjhgfdsasdfghjkl;'\';lkjhgfdssdfghjkl;'\rtyuiop[]sizeof(char) * (strlen(*template) + 2 + strlen(argv[++i])));if (*template) {strcat((*template), "|");
                    strcat((*template), argv[i]);
                }
            }
            flags -> e = 1;
        }
    }
    if (!flags -> e) {
        (*template) = (char *) malloc(sizeof(char) * (strlen(argv[i]) + 1));
        if (*template)
            strcpy((*template), argv[i++]);
    }
    return i;
}
